#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>

char board [3][3];
const char board PLAYER = 'x';
const char board COMPUTER = 'o';

void resetBoard()
void printBoard()
int checkFreeSpace()
void playerMove()
void computerMove()
char checkWinner()
void printWinner(char)


int main(){
//declare local var
    char winner = ' ';
    char response;
    do{
    winner = ' ';
    response = ' ';
    resetBoard();
    
        playerMove();
        winner = checkWinner();
        if(winner != ' ' || checkFreeSpace() != 0){
            break;
        }
        computerMove();
        winner = checkWinner();
        if(winner != ' ' || checkFreeSpace() != 0){
            break;
        }

    printBoard();
    printWinner(winner);
    printf("\n Would you like to play again? (Y/N): ");
    scanf("%c");
    scanf("%c, &response");
    response = toupper(response);

    }while(response == 'Y');

    printf("Thanks for playing!");
    
    return 0;
}

    void resetBoard(){
        for(int i = 0; i <3; i++){
            for(int j = 0; j <3; j++){
                board[i][j] = ' ';
        }
    }

    void printBoard(){
        printf("%c | %c | %c ", board[0][0], board[0][1], board[0][2]);
        printf("\n---|---|---\n");
        printf("%c | %c | %c ", board[1][0], board[1][1], board[1][2]);
        printf("\n---|---|---\n");
        printf("%c | %c | %c ", board[2][0], board[2][1], board[2][2]);
        printf("\n---|---|---\n");
        printf("\n");
    }

    int checkFreeSpace(){
        for(int i = 0; i <3; i++) {
            for(int j = 0; j <3; j++) {
                if(board[i][j] != ' ') {
                    checkFreeSpace--;
                }
            }
        }
        return checkFreeSpace;
    }

    void playerMove(){
        int x;
        int y;
        do{
        printf("Enter row #(1-3): ");
        scanf("%d", &x); // acept user input (int, address x)
        x--;
        printf("Enter colum #(1-3): ");
        scanf("%d", &y); // acept user input (int, address x)
        y--;

        if(board[x][y] != ' ') {
            printf("Invalid move!\n");
        }
        else{
            board[x][y] = PLAYER;
            break;
        }
        }while(board[x][y] != ' ');
    }

    void computerMove(){
        // randomly create a number (create a seed based on current time)
        srand(time(0));
        int x;
        int y;
        if(checkFreeSpace() > 0){
            do{
                x = random() % 3;
                y = random() % 3;
            }
            while(board[x][y] != ' ');

            board[x][y] = COMPUTER;
        }
        else{
            printWinner(' ');
        }
    }

    char checkWinner(){
        //check rows
        for(int i = 0; i <3; i++) {
            if(board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][2] == board[i][0]) {
                return board[i][0];
            }
        }
        //check column
        for(int i = 0; i <3; i++) {
            if(board[0][i] == board[1][i] && board[1][i] == board[2][i] && board[2][i] == board[0][i]) {
                return board[0][i];
            }
        }
        //check diagonals
        for(int i = 0; i <3; i++) {
            if(board[0][0] == board[1][1] && board[0][0] == board[2][2]) {
                return board[0][0];
            }
        }
        for(int i = 0; i <3; i++) {
            if(board[0][2] == board[1][1] && board[0][0] == [2][0]) {
                return board[0][2];
            }
        }
        return ' ';
    }

    void printWinner(char winner){
        if(winner == PLAYER){
            printf("YOU WIN !");
        }
        else if(winner == COMPUTER) {
            printf("YOU LOSE !");
        }
        else{
            printf("IT'S A TIE !");
        }
    }